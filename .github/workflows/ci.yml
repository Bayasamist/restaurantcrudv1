name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: "ap-southeast-2"
  MONGO_DB_NAME: "restaurantcrudv1"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build application
        run: npm run build

  deploy:
    needs: test
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [22]
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          npm install -g yarn
          yarn install

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: |
          yarn install
          yarn build

      - name: Setup environment
        working-directory: ./backend
        run: |
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env

      - name: Deploy application
        run: |
          pm2 restart all